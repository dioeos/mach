import { Button, ScrollView, VerticalBox, HorizontalBox, LineEdit, ListView } from "std-widgets.slint";

struct Macro {
  keys_ui: string,
  action_ui: string,
}

component Macro inherits Rectangle {
  in property<string> text;
  in property<string> description;
  // background: #f0f0f0;

  Rectangle {
    // background: #00FF00;
    width: parent.width;
    height: parent.height;
    Text {
      width: parent.width - 16px;
      height: parent.height;
      text: root.text + " - " + root.description;
      horizontal-alignment: left;
      vertical-alignment: center;
      wrap: no-wrap;
      overflow: elide;
    }
  }
}

export component AppWindow inherits Window {

    in-out property <[Macro]> macros;
    in-out property<string> search_text;
    callback search_text_changed(string); 
    width: 1200px;
    height: 600px;
    title: "Mach";
    VerticalBox {
      width: parent.width;
      height: parent.height;

      Rectangle {
        // background: #FF0000;
        height: 40px;
        HorizontalBox {
          width: parent.width;
          alignment: center;
          LineEdit {
            text <=> root.search_text;
            placeholder-text: "Filter";
            width: 1000px;
            //trigger callback when text property changes
            changed text => {
              search_text_changed(self.text)
            }
          }
        }
      }

      Rectangle {
        width: parent.width;
        height: parent.height;
        Rectangle {
          padding: 20px;
          ListView {
            width: parent.width;
            // height: 74px * ceil(root.macros.length / 4);
            for m[i] in root.macros : Macro {
              // x: mod(i, 4) * 74px;
              // y: floor(i /4) * 74px;
              height: 20px;
              text: m.keys_ui;
              description: m.action_ui;
            }
          }
        }
      }

  }
}
